- [Predict Job failures in advance for system jobs](#Predict-Job-failures-in-advance-for-system-jobs)
  - [Data](#Data)
  - [Citation:](#Citation:)
- [Import Libraries](#Import-Libraries)
- [Load Data](#Load-Data)
  - [Load High Level Data Set Scheduler](#Load-High-Level-Data-Set-Scheduler)
  - [Load Low level Data set DCGM](#Load-Low-level-Data-set-DCGM)
- [Exploratory Data Analysis (EDA)](#Exploratory-Data-Analysis-(EDA))
  - [Data Exploration (High level Schedular data)](#Data-Exploration-(High-level-Schedular-data))
    - [Bi-Variate Analysis](#Bi-Variate-Analysis)
      - [drop column time_submit and time_end, highly correlated with time_start](#drop-column-time_submit-and-time_end,-highly-correlated-with-time_start)
      - [Inspect and drop empty features](#Inspect-and-drop-empty-features)
    - [UniVariate Analysis](#UniVariate-Analysis)
      - [drop the columns that has all NaNs](#drop-the-columns-that-has-all-NaNs)
      - [Drop the columns with complicated values and high unique numbers](#Drop-the-columns-with-complicated-values-and-high-unique-numbers)
  - [Data Exploration (low level DGCM Data)](#Data-Exploration-(low-level-DGCM-Data))
- [Merge High level(Schedular) and Low level(DCGM) DataFrames](#Merge-High-level(Schedular)-and-Low-level(DCGM)-DataFrames)
  - [Explore id_job column in both DFs](#Explore-id_job-column-in-both-DFs)
    - [find and drop the duplicates](#find-and-drop-the-duplicates)
  - [Set Index to id_job for High level data set](#Set-Index-to-id_job-for-High-level-data-set)
  - [Set Index to id_job for Low Level Data set](#Set-Index-to-id_job-for-Low-Level-Data-set)
  - [Merge DFs](#Merge-DFs)
- [Data Exploration and Cleanup on merged_df](#Data-Exploration-and-Cleanup-on-merged_df)
  - [Drop columns with high number of Unique values](#Drop-columns-with-high-number-of-Unique-values)
  - [BiVariate Analysis](#BiVariate-Analysis)
    - [correlation heatmap for all columns](#correlation-heatmap-for-all-columns)
    - [Get Correaltion with taget 'exit_code'](#Get-Correaltion-with-taget-'exit_code')
    - [Drop highly correlated Columns with least correlation to target, Drop Columns with all NaN](#Drop-highly-correlated-Columns-with-least-correlation-to-target,-Drop-Columns-with-all-NaN)
    - [Drop the columns that are not available for new jobs](#Drop-the-columns-that-are-not-available-for-new-jobs)
  - [Univariate Analysis](#Univariate-Analysis)
    - [convert gres_alloc and gres_req to int](#convert-gres_alloc-and-gres_req-to-int)
    - [Drop highly skewed column 'constraint'](#Drop-highly-skewed-column-'constraint')
    - [Since Exit Code a target column, replace all of the code > 0 to 1, where 0 : Success and 1: Failure](#Since-Exit-Code-a-target-column,-replace-all-of-the-code->-0-to-1,-where-0-:-Success-and-1:-Failure)
    - [Simplify job_type column](#Simplify-job_type-column)
  - [Final Exploration of merged table: confirm the columns and if any further cleanup is required](#Final-Exploration-of-merged-table:-confirm-the-columns-and-if-any-further-cleanup-is-required)
    - [Handle NaNs and Duplicates](#Handle-NaNs-and-Duplicates)
    - [Identify highly correlated features for target features and drop all others](#Identify-highly-correlated-features-for-target-features-and-drop-all-others)
    - [Drop Duplicates](#Drop-Duplicates)
- [Data Preparation for modeling](#Data-Preparation-for-modeling)
  - [Prepare Categorical Data](#Prepare-Categorical-Data)
- [Test Train Split](#Test-Train-Split)
  - [Scale the data](#Scale-the-data)
- [Modeling](#Modeling)
  - [Apply Various models and compare the performances](#Apply-Various-models-and-compare-the-performances)
    - [Create Dataframe to capture performances of various models](#Create-Dataframe-to-capture-performances-of-various-models)
    - [Apply models and manually compare the performances](#Apply-models-and-manually-compare-the-performances)
    - [CONCLUSION](#CONCLUSION)
  - [Confusion Matrix Using Best Performing Model: XGBClassifier](#Confusion-Matrix-Using-Best-Performing-Model:-XGBClassifier)
    - [XGBClassifier Model Predictions](#XGBClassifier-Model-Predictions)
    - [Confusion Matrix for Training Data](#Confusion-Matrix-for-Training-Data)
    - [Confusion Matrix for Test Data](#Confusion-Matrix-for-Test-Data)
    - [CONCLUSION](#CONCLUSION)
  - [Get features by importance](#Get-features-by-importance)
    - [Use feature_importance_ to get the percentage weight](#Use-feature_importance_-to-get-the-percentage-weight)
    - [use plot_importance function provided by xgb to get the raw importance.](#use-plot_importance-function-provided-by-xgb-to-get-the-raw-importance.)
- [Conclusion](#Conclusion)
